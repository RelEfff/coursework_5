from utils.api import HeadHunterAPI
from utils.db_create import create_database, create_tables
from utils.data_loader import save_companies, save_vacancies
from utils.db_manager import DBManager

# –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ —Ç–∞–±–ª–∏—Ü
create_database()
create_tables()

# –°–ø–∏—Å–æ–∫ –∫–æ–º–ø–∞–Ω–∏–π –ø–æ ID —Å hh.ru
employers = [
    "1740",     # –Ø–Ω–¥–µ–∫—Å
    "3529",     # –°–±–µ—Ä
    "78638",    # –¢–∏–Ω—å–∫–æ—Ñ—Ñ
    "80",       # –ì–∞–∑–ø—Ä–æ–º
    "15478",    # VK
    "1122462",  # Ozon
    "4181",     # –ê–ª—å—Ñ–∞-–ë–∞–Ω–∫
    "39305",    # –ú–¢–°
    "3776",     # –†–ñ–î
    "183"       # –†–æ—Å—Ç–µ–ª–µ–∫–æ–º
]

# –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å API
api = HeadHunterAPI(employers)
companies = api.get_employers()
print(f"\n–ù–∞–π–¥–µ–Ω–æ –∫–æ–º–ø–∞–Ω–∏–π: {len(companies)}")

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–π –∏ –≤–∞–∫–∞–Ω—Å–∏–π
id_map = save_companies(companies)
for hh_id in id_map:
    vacancies = api.get_vacancies(hh_id)  # max_vacancies=50 –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    save_vacancies(vacancies, id_map[hh_id])
    print(f"–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤–∞–∫–∞–Ω—Å–∏–π –¥–ª—è –∫–æ–º–ø–∞–Ω–∏–∏ {hh_id}: {len(vacancies)}")

# –†–∞–±–æ—Ç–∞ —Å –±–∞–∑–æ–π —á–µ—Ä–µ–∑ DBManager
db = DBManager()

def show_menu():
    print("\nüî∏ –ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?")
    print("1 ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–º–ø–∞–Ω–∏–∏ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–∫–∞–Ω—Å–∏–π")
    print("2 ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –≤–∞–∫–∞–Ω—Å–∏–∏ (–ø–æ 5)")
    print("3 ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ä–µ–¥–Ω—é—é –∑–∞—Ä–ø–ª–∞—Ç—É")
    print("4 ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å –≤–∞–∫–∞–Ω—Å–∏–∏ —Å –∑–∞—Ä–ø–ª–∞—Ç–æ–π –≤—ã—à–µ —Å—Ä–µ–¥–Ω–µ–π")
    print("5 ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å –≤–∞–∫–∞–Ω—Å–∏–∏ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É")
    print("0 ‚Äî –í—ã–π—Ç–∏")

while True:
    show_menu()
    choice = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–µ–π—Å—Ç–≤–∏—è: ")

    if choice == "1":
        print("\n‚ñ∂Ô∏è –ö–æ–º–ø–∞–Ω–∏–∏ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–∫–∞–Ω—Å–∏–π:")
        for row in db.get_companies_and_vacancies_count():
            print(f"{row[0]} ‚Äî {row[1]} –≤–∞–∫–∞–Ω—Å–∏–π")

    elif choice == "2":
        print("\n‚ñ∂Ô∏è –í—Å–µ –≤–∞–∫–∞–Ω—Å–∏–∏ (–ø–æ 5 —à—Ç—É–∫):")
        all_vacancies = db.get_all_vacancies()
        index = 0
        while index < len(all_vacancies):
            for row in all_vacancies[index:index+5]:
                print(f"{row[0]} | {row[1]} | {row[2]} | {row[3]}")
            index += 5
            if index >= len(all_vacancies):
                print("\nüîö –ö–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞.")
                break
            if input("Enter ‚Äî –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, 'q' ‚Äî –≤—ã–π—Ç–∏: ").lower() == 'q':
                break

    elif choice == "3":
        print("\n‚ñ∂Ô∏è –°—Ä–µ–¥–Ω—è—è –∑–∞—Ä–ø–ª–∞—Ç–∞:")
        print(db.get_avg_salary())

    elif choice == "4":
        print("\n‚ñ∂Ô∏è –í–∞–∫–∞–Ω—Å–∏–∏ —Å –∑–∞—Ä–ø–ª–∞—Ç–æ–π –≤—ã—à–µ —Å—Ä–µ–¥–Ω–µ–π:")
        for row in db.get_vacancies_with_higher_salary():
            print(f"{row[0]} | {row[1]} | {row[2]} | {row[3]}")

    elif choice == "5":
        keyword = input("–í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –¥–ª—è –ø–æ–∏—Å–∫–∞: ")
        print(f"\n‚ñ∂Ô∏è –í–∞–∫–∞–Ω—Å–∏–∏ –ø–æ –∫–ª—é—á—É '{keyword}':")
        for row in db.get_vacancies_with_keyword(keyword):
            print(f"{row[0]} | {row[1]} | {row[2]} | {row[3]}")

    elif choice == "0":
        print("–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
        break

    else:
        print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

db.close()